const { downloadContentFromMessage } = require('@whiskeysockets/baileys'); // adapte selon ta version
const axios = require('axios');

async function sendMenuCommand(sock, jid) {
  try {
    // Liens directs Google Drive
    const videoUrl = 'https://drive.google.com/uc?export=download&id=1ECt89Q23IRi5nCXGaGd5hi5cSVoRswWz';
    const audioUrl = 'https://drive.google.com/uc?export=download&id=1puuNjNr9A8iai3wldkBlUvOuCBobis6-';

    // T√©l√©charger la vid√©o en buffer
    const videoResponse = await axios.get(videoUrl, { responseType: 'arraybuffer' });
    const videoBuffer = Buffer.from(videoResponse.data);

    // Envoyer la vid√©o en message media
    await sock.sendMessage(jid, {
      video: videoBuffer,
      mimetype: 'video/mp4',
      fileName: 'jenifer_video.mp4',
      caption: 'Voici la vid√©o de Jenifer xm üöÄ'
    });

    // Message texte du menu
    const menuMessage = `
‚îè‚îÅ‚îÅ„Äî ü§ñùôüùôöùô£ùôûùôõùôöùôß ùô≠ùô¢ „Äï‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ üöÄ powered by Jenifer xm 
‚îÉ ‚è±Ô∏è 2025
‚îÉ üîñ Version  : v1
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
         ‚îè‚îÅ‚îÅùïçùïöùï§ùïöùïìùïùùïñ ùïûùïñùïüùï¶‚îÅ‚îÅ‚îì
„Äá!ping
„Äá!tagall
„Äá!tagadmin
„Äá!loc
„Äá!img
„Äá!song
„Äá!yt_download
„Äá!tiktok
„Äá!menu
„Äá!motivation
„Äá!aud
„Äá!vid
„Äá!info
„Äá!contact
„Äá!sticker
         ‚îè‚îÅ‚îÅadmins-menu‚îÅ‚îÅ‚îì
‚ôõ!kickall
‚ôõ!ban
‚ôõ!vu
‚ôõ!getpp
‚ôõ!antilink
‚ôõ!antibot
‚ôõ!antimedia 
‚ôõ!promote 
‚ôõ!demote
‚ôõ!take
              ‚îè‚îÅ‚îÅstockage‚îÅ‚îÅ‚îì
„Äî!store
„Äî!listermedia 
            ‚îè‚îÅ‚îÅROYAL menu‚îÅ‚îÅ‚îì
‚ò¨!suicide 
     ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
channel link :
https://whatsapp.com/channel/0029VbBdiAC1t90TpAoeGS20
web link: no availableüïì
> Powered by Jenifer xm
GitHub link: 
https://github.com/mikaelkabore175-dotcom/Jenifer-xm-
    `;

    // Envoyer le message texte
    await sock.sendMessage(jid, { text: menuMessage });

    // T√©l√©charger l'audio en buffer
    const audioResponse = await axios.get(audioUrl, { responseType: 'arraybuffer' });
    const audioBuffer = Buffer.from(audioResponse.data);

    // Envoyer l'audio en message vocal (PTT)
    await sock.sendMessage(jid, {
      audio: audioBuffer,
      mimetype: 'audio/mpeg', // ou audio/ogg selon format
      ptt: true, // message vocal
      fileName: 'jenifer_audio.mp3'
    });

  } catch (error) {
    console.error('Erreur dans la commande menu:', error);
    await sock.sendMessage(jid, { text: 'D√©sol√©, une erreur est survenue lors de l\'envoi du menu.' });
  }
}

// Utilisation dans le handler des commandes avec Baileys:
// if(command === 'menu'){
//   await sendMenuCommand(sock, from);
// }

module.exports = { sendMenuCommand };
